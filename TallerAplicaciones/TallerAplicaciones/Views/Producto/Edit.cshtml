@using uy.edu.ort.taller.aplicaciones.dominio
@using uy.edu.ort.taller.aplicaciones.utiles.Formatters
@model TallerAplicaciones.Models.ProductoConArchivosSubmitModel
@{
    ViewBag.Title = "Editar Producto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>
    Edit</h2>
@using (Html.BeginForm("Edit", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Editar Producto</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.Nombre)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Nombre)
            @Html.ValidationMessageFor(model => model.Nombre)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Codigo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Codigo)
            @Html.ValidationMessageFor(model => model.Codigo)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Descripcion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Descripcion)
            @Html.ValidationMessageFor(model => model.Descripcion)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Activo)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Activo)
            @Html.ValidationMessageFor(model => model.Activo)
        </div>
        <div class="editor-label">
            <label for="Videos">Fotos:</label>
           
            Fotos Almacenadas (Seleccione para eliminar)
        </div>
        <div class="editor-field">
            <ul class="gallery">
                @{  var formatter = new GalleryHtmlFormatter() { CheckboxName = "DeleteFiles" };
                    if (Model.Producto.Archivos != null)
                    {
                        foreach (var item in Model.Producto.Archivos.OfType<Foto>())
                        {
                            @Html.Raw("<li>") 
                            item.Accept(formatter);
                            Output.Write(formatter.Html);
                            @Html.Raw("</li>") 
                        }
                    }
                }
            </ul>
        </div>
         <div class="editor-label">
            Subir Fotos
        </div>
          <div class="editor-field Fotos">
            <div>
              
                @Html.TextBoxFor(model => model.Fotos, new { type = "file" })
                &nbsp;<a href="javascript:void(0)" onclick="addNew('Fotos')">[+]</a>
                 @Html.ValidationMessageFor(model => model.Fotos)
            </div>
        </div>
      

        
        <div class="editor-label">
            <label for="Videos">Videos:</label>
            
            Videos Almacenadas (Seleccione para eliminar)
        </div>
        <div class="editor-field">
            <ul class="gallery">
                @{  
                    if (Model.Producto.Archivos != null)
                    {
                        foreach (var item in Model.Producto.Archivos.OfType<Video>())
                        {
                            @Html.Raw("<li>")
                            item.Accept(formatter);
                            Output.Write(formatter.Html);
                            @Html.Raw("</li>")
                        }
                    }
                }
            </ul>
        </div>
         <div class="editor-label">
            Subir Videos
        </div>
          <div class="editor-field Videos">
            <div>
               
                @Html.TextBoxFor(model => model.Videos, new { type = "file" })
                &nbsp;<a href="javascript:void(0)" onclick="addNew('Videos')">[+]</a>
                 @Html.ValidationMessageFor(model => model.Videos)
            </div>
        </div>

        <p>
           
            @Html.HiddenFor(model => model.ProductoID)
            @Html.ValidationMessageFor(model => model.ProductoID)
            <input type="submit" value="Modificar" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to list", "List")
</div>
@section Styles {
    @Styles.Render("~/Content/gallery")
}
@section Scripts {
    <script>
        function openImage(elem) {
            window.open(elem.attr("data"));
        }

        function openVideo(elem) {
            window.open(elem.attr("data"));
        }

        function addNew(name) {

            var accept = (name == "Fotos") ? ".jpg" : ".wmv";

            $("." + name).append($('<div><input type="file" value="" name="' + name + '" />' +
                '<a href="javascript:void(0)" onclick="$(this).parent().remove()">[x]</a>' +
                '</div>'));
        }

        function removerValorAtributoSimple($elem, idProducto, idValorAtributoSimple) {
            var data = {
                idProducto: idProducto,
                idValorAtributoSimple: idValorAtributoSimple
            };

            $.post("RemoverValorAtributoSimple", data, function (response) {
                if (response.Ok) {
                    $elem.parent().parent().remove();
                } else {
                    alert(response.Message);
                }
            }, "json");
        }

        function editarValorAtributoSimple($elem, idValorAtributoSimple, nuevoValor) {
            var data = {
                idValorAtributoSimple: idValorAtributoSimple,
                nuevoValor : nuevoValor
            };

            $.post("EditarValorAtributoSimple", data, function (response) {
                if (response.Ok) {
                    //TODO ver que hace
                    //mandar al listado con el nuevo valor
                } else {
                    alert(response.Message);
                }
            }, "json");
        }

        function removerValorAtributoSimple($elem, idProducto, nuevoValor) {
            var data = {
                idProducto: idProducto,
                nuevoValor: nuevoValor
            };

            $.post("RemoverValorAtributoSimple", data, function (response) {
                if (response.Ok) {
                    $elem.parent().parent().remove();
                } else {
                    alert(response.Message);
                }
            }, "json");
        }


    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
